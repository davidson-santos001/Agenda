package Views;

import Controller.CRUD;
import Controller.ConnexaoDAO;
import Model.Contatos;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * 05/05/2021
 *
 * @author d
 */
public class FrmAgenda extends javax.swing.JFrame {
// criar um objeto tipo tabela para poder ter a liberdade de fazer modificações 
// com informações de banco de dados e até modificações de design 
// neste caso foi feito com a tabela de contatos    

    DefaultTableModel dtm;
    // criar um vetor para receber a lista de contatos
    Object[] nomecolunas;
    // criar um array(while)  para poder percorrer a  lista de contatos

    List<Contatos> listcontatos;

    /**
     * Creates new form FrmAgenda
     */
    public FrmAgenda() {
        initComponents();
        ID.requestFocus();

        // inicializar objetos da classe
        nomecolunas = new Object[]{"ID", "nome", "telefone", "email"};
        dtm = new DefaultTableModel(null, nomecolunas);
        Table_contatos.setModel(dtm);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table_contatos = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        Btn_sair = new javax.swing.JButton();
        Btn_Alterar = new javax.swing.JButton();
        Btn_inserir = new javax.swing.JButton();
        Btn_novo = new javax.swing.JButton();
        Btn_Excluir = new javax.swing.JButton();
        Btn_limpar_tabela = new javax.swing.JButton();
        Btn_Pesquisa = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        txtid = new javax.swing.JLabel();
        ID = new javax.swing.JTextField();
        txtnome = new javax.swing.JLabel();
        telefone = new javax.swing.JTextField();
        txttelefone = new javax.swing.JLabel();
        nome = new javax.swing.JTextField();
        txtemail = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        campo_pesquisa = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel3.setBackground(new java.awt.Color(176, 196, 222));
        jPanel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jPanel3.setLayout(null);

        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logotipo/id.jpg"))); // NOI18N
        jLabel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel3.add(jLabel3);
        jLabel3.setBounds(20, 550, 170, 110);

        jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logotipo/TELEFONE2.jpg"))); // NOI18N
        jLabel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel3.add(jLabel1);
        jLabel1.setBounds(350, 550, 170, 110);

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logotipo/EMAIL.jpg"))); // NOI18N
        jLabel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel3.add(jLabel2);
        jLabel2.setBounds(520, 550, 160, 110);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logotipo/Sem título.png"))); // NOI18N
        jLabel4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel3.add(jLabel4);
        jLabel4.setBounds(190, 550, 160, 110);

        Table_contatos.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(51, 51, 51), java.awt.Color.darkGray, java.awt.Color.darkGray, java.awt.Color.darkGray));
        Table_contatos.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        Table_contatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "nome", "telefone", "email"
            }
        ));
        Table_contatos.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Table_contatos.setShowHorizontalLines(true);
        Table_contatos.setShowVerticalLines(true);
        Table_contatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Table_contatosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Table_contatos);

        jPanel3.add(jScrollPane1);
        jScrollPane1.setBounds(20, 350, 660, 200);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 0), null));

        Btn_sair.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Btn_sair.setText("Sair");
        Btn_sair.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Btn_sair.setPreferredSize(new java.awt.Dimension(69, 29));
        Btn_sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_sairActionPerformed(evt);
            }
        });
        Btn_sair.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Btn_sairKeyPressed(evt);
            }
        });

        Btn_Alterar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Btn_Alterar.setText("Alterar");
        Btn_Alterar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Btn_Alterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_AlterarActionPerformed(evt);
            }
        });
        Btn_Alterar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Btn_AlterarKeyPressed(evt);
            }
        });

        Btn_inserir.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Btn_inserir.setText("Gravar");
        Btn_inserir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Btn_inserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_inserirActionPerformed(evt);
            }
        });
        Btn_inserir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Btn_inserirKeyPressed(evt);
            }
        });

        Btn_novo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Btn_novo.setText("Novo");
        Btn_novo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Btn_novo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_novoActionPerformed(evt);
            }
        });
        Btn_novo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Btn_novoKeyPressed(evt);
            }
        });

        Btn_Excluir.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Btn_Excluir.setText("Excluir");
        Btn_Excluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Btn_Excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_ExcluirActionPerformed(evt);
            }
        });
        Btn_Excluir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Btn_ExcluirKeyPressed(evt);
            }
        });

        Btn_limpar_tabela.setText("Limpar_Tabela");
        Btn_limpar_tabela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_limpar_tabelaActionPerformed(evt);
            }
        });
        Btn_limpar_tabela.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Btn_limpar_tabelaKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(Btn_novo, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Btn_inserir, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Btn_Alterar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Btn_Excluir, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Btn_limpar_tabela)
                .addGap(18, 18, 18)
                .addComponent(Btn_sair, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Btn_novo)
                    .addComponent(Btn_inserir)
                    .addComponent(Btn_Alterar)
                    .addComponent(Btn_sair, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Btn_Excluir)
                    .addComponent(Btn_limpar_tabela))
                .addContainerGap())
        );

        jPanel3.add(jPanel1);
        jPanel1.setBounds(20, 300, 660, 50);

        Btn_Pesquisa.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Btn_Pesquisa.setText("Pesquisa");
        Btn_Pesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_PesquisaActionPerformed(evt);
            }
        });
        Btn_Pesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Btn_PesquisaKeyPressed(evt);
            }
        });
        jPanel3.add(Btn_Pesquisa);
        Btn_Pesquisa.setBounds(20, 20, 90, 40);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Dados de conatos ", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.BELOW_TOP, new java.awt.Font("Arial", 1, 12))); // NOI18N
        jPanel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        txtid.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        txtid.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtid.setText("ID: ");

        ID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDActionPerformed(evt);
            }
        });

        txtnome.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        txtnome.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtnome.setText("Nome : ");

        telefone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                telefoneActionPerformed(evt);
            }
        });

        txttelefone.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        txttelefone.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txttelefone.setText("Telefone : ");

        nome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomeActionPerformed(evt);
            }
        });

        txtemail.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        txtemail.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtemail.setText("E-mail : ");

        email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logotipo/id33.jpg"))); // NOI18N
        jLabel9.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(0, 0, Short.MAX_VALUE)
                            .addComponent(txtnome)
                            .addGap(21, 21, 21))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(txttelefone)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtemail)
                            .addComponent(txtid))
                        .addGap(25, 25, 25)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(ID, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(387, 387, 387))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(nome)
                                .addGap(54, 54, 54)))
                        .addComponent(jLabel9)
                        .addGap(74, 74, 74))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(telefone, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(email))
                        .addGap(212, 212, 212))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtid)
                            .addComponent(ID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtnome)
                            .addComponent(nome, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(telefone, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txttelefone))
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtemail)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel3.add(jPanel2);
        jPanel2.setBounds(20, 70, 660, 230);

        campo_pesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campo_pesquisaActionPerformed(evt);
            }
        });
        jPanel3.add(campo_pesquisa);
        campo_pesquisa.setBounds(110, 20, 570, 40);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 660, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 110, Short.MAX_VALUE)
        );

        jPanel3.add(jPanel4);
        jPanel4.setBounds(20, 550, 660, 110);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 709;
        gridBagConstraints.ipady = 669;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        getContentPane().add(jPanel3, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        this.setTitle("Agenda de contatos");
        setBounds(40, 40, 700, 700);
        setLocationRelativeTo(null);
        getContentPane().setBackground(new Color(176, 196, 222));
        desabilitar();
    }//GEN-LAST:event_formWindowOpened

    private void Btn_inserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_inserirActionPerformed
        // TODO add your handling code here:
        if (verificarcampos()) {
            try {
                // cadastro do contato
                cadastroDeContatos();
                
            } catch (SQLException | ClassNotFoundException ex) {
               JOptionPane.showMessageDialog(null, " Ja existe este contato.");
                
            }
        }
            limpar();
                
            try {
                listarContatos();
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(FrmAgenda.class.getName()).log(Level.SEVERE, null, ex);
            }    
           desabilitar();
    }//GEN-LAST:event_Btn_inserirActionPerformed

    private void Btn_novoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_novoActionPerformed
        // TODO add your handling code here:
        limpar();
        habilitar();

    }//GEN-LAST:event_Btn_novoActionPerformed

    private void Btn_ExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_ExcluirActionPerformed
        // confirmação do usuario
        String msg= "Deseja realmente excluir esse contato";
        int resp =JOptionPane.showConfirmDialog(null,msg, "confirmação",JOptionPane.YES_NO_OPTION);
        
        if  (resp == JOptionPane.YES_NO_OPTION){
            if (!ID.getText().equals("")){
                try {
                    removerContato(Integer.parseInt(ID.getText()));
                } catch (SQLException | ClassNotFoundException ex) {
                    Logger.getLogger(FrmAgenda.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
        }
    }//GEN-LAST:event_Btn_ExcluirActionPerformed

    private void Btn_sairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_sairActionPerformed
        // sair do programa  
        if (JOptionPane.showConfirmDialog(null, "se deseja sair confirme ","SAIR",
              JOptionPane.YES_OPTION)==JOptionPane.YES_NO_OPTION){
          System.exit(0);}
    }//GEN-LAST:event_Btn_sairActionPerformed

    private void Btn_PesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_PesquisaActionPerformed
        try {

            listarContatos();
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(FrmAgenda.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_Btn_PesquisaActionPerformed

    private void Btn_novoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Btn_novoKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            Btn_inserir.requestFocus();
        }
    }//GEN-LAST:event_Btn_novoKeyPressed

    private void nomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomeActionPerformed
        // TODO add your handling code here:
        telefone.requestFocus();
    }//GEN-LAST:event_nomeActionPerformed

    private void IDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDActionPerformed
        // TODO add your handling code here:
        nome.requestFocus();
    }//GEN-LAST:event_IDActionPerformed

    private void telefoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_telefoneActionPerformed
        // TODO add your handling code here:
        email.requestFocus();
    }//GEN-LAST:event_telefoneActionPerformed

    private void emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailActionPerformed
        // TODO add your handling code here:
        Btn_novo.requestFocus();

    }//GEN-LAST:event_emailActionPerformed

    private void Btn_inserirKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Btn_inserirKeyPressed
        // TODO add your handling code here:
        Btn_Alterar.requestFocus();
    }//GEN-LAST:event_Btn_inserirKeyPressed

    private void Btn_AlterarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Btn_AlterarKeyPressed
        // TODO add your handling code here:
        Btn_Excluir.requestFocus();
    }//GEN-LAST:event_Btn_AlterarKeyPressed

    private void Btn_ExcluirKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Btn_ExcluirKeyPressed
        // TODO add your handling code here:
        Btn_limpar_tabela.requestFocus();
    }//GEN-LAST:event_Btn_ExcluirKeyPressed

    private void Btn_sairKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Btn_sairKeyPressed
        // TODO add your handling code here:
        campo_pesquisa.requestFocus();
    }//GEN-LAST:event_Btn_sairKeyPressed

    private void campo_pesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campo_pesquisaActionPerformed
        // TODO add your handling code here:
        Btn_Pesquisa.requestFocus();
    }//GEN-LAST:event_campo_pesquisaActionPerformed

    private void Btn_PesquisaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Btn_PesquisaKeyPressed
        // TODO add your handling code here:
        Btn_novo.requestFocus();
    }//GEN-LAST:event_Btn_PesquisaKeyPressed

    private void Btn_AlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_AlterarActionPerformed

        if (!ID.getText().equals("")) {
            try {
                alterarContato();
            } catch (SQLException | ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "não foi alterado ");
            }
        } 
       
    }//GEN-LAST:event_Btn_AlterarActionPerformed

    private void Table_contatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Table_contatosMouseClicked
        // alterar linha selecionada 
        
       int linha =  Table_contatos.getSelectedRow();
       
       String dados;
       dados = "select * from Contatos where codigo =" + Table_contatos.getValueAt(linha, 0);
       
        try {
            // conectar ao database
            Connection conn = ConnexaoDAO.conectarDB();
            
            // statement permiti criar sentença em SQL
            
            Statement atm = conn.createStatement();
            ResultSet rs = atm.executeQuery(dados);
            rs.next();
            
            // recuperar  coluna a coluna  
            this.ID.setText(rs.getString("codigo"));
            this.nome.setText(rs.getString("nome"));
            this.telefone.setText(rs.getString("fone"));
            this.email.setText(rs.getString("email"));      
            habilitar();
        } catch (SQLException ex) {
            
           JOptionPane.showMessageDialog(null, " Nenhum contato selecionado","ERRO", 0);
        }
        
    }//GEN-LAST:event_Table_contatosMouseClicked

    private void Btn_limpar_tabelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_limpar_tabelaActionPerformed
        // serve para limpar a exibição de informações da tabela 
        
        limpartabela();
    }//GEN-LAST:event_Btn_limpar_tabelaActionPerformed

    private void Btn_limpar_tabelaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Btn_limpar_tabelaKeyPressed
        // TODO add your handling code here:
        Btn_sair.requestFocus();
    }//GEN-LAST:event_Btn_limpar_tabelaKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmAgenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmAgenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmAgenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmAgenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmAgenda().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Btn_Alterar;
    private javax.swing.JButton Btn_Excluir;
    private javax.swing.JButton Btn_Pesquisa;
    private javax.swing.JButton Btn_inserir;
    private javax.swing.JButton Btn_limpar_tabela;
    private javax.swing.JButton Btn_novo;
    private javax.swing.JButton Btn_sair;
    private javax.swing.JTextField ID;
    private javax.swing.JTable Table_contatos;
    private javax.swing.JTextField campo_pesquisa;
    private javax.swing.JTextField email;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nome;
    private javax.swing.JTextField telefone;
    private javax.swing.JLabel txtemail;
    private javax.swing.JLabel txtid;
    private javax.swing.JLabel txtnome;
    private javax.swing.JLabel txttelefone;
    // End of variables declaration//GEN-END:variables

// --------------------------metodo serve para limpar campos de textos 
    
    private void limpartabela(){
        dtm.setRowCount(0);
    }
    private void limpar() {
        campo_pesquisa.setText("");
        ID.setText("");
        nome.setText("");
        telefone.setText("");
        email.setText("");
       
    }
//---metodo serve para verificar se todos os  campos de textos foram preenchidos.

    private boolean verificarcampos() {
        if (!ID.getText().equals("")
                && !nome.getText().equals("")
                && !telefone.getText().equals("")
                && !email.getText().equals("")) {
            return true;
        } else {
            JOptionPane.showMessageDialog(null, " Todos os campos devem ser preenchido ");
            return false;
        }
    }
//------------------------metodo gravar registro no DB (banco de dados )

    private void cadastroDeContatos() throws SQLException, ClassNotFoundException {

        // intanciando a classe contaTos que contem  oS ATRIBUTOS DA CLASSE  CRUD , 
        Contatos pessoa = new Contatos();
        pessoa.setCodigo(Integer.parseInt(ID.getText()));
        pessoa.setNome(nome.getText());
        pessoa.setFone(telefone.getText());
        pessoa.setEmail(email.getText());

        CRUD dados = new CRUD();
        dados.inserir(pessoa);
    }

    //------------------------metodo habilitar caixas de textos 
    public void habilitar() {

        ID.setEnabled(true);
        nome.setEnabled(true);
        telefone.setEnabled(true);
        email.setEnabled(true);
    }
    // método desabilitar caixas de texto

    public void desabilitar() {

        ID.setEnabled(false);
        nome.setEnabled(false);
        telefone.setEnabled(false);
        email.setEnabled(false);
    }
    //------------------------metodo alterar informaçoes dos contatos 

    private void alterarContato() throws SQLException, ClassNotFoundException {
        // instancia de objeto tipo Contatos para atualizar registro 
        Contatos pessoa = new Contatos();

        //if(!campo_pesquisa.equals("")){
        pessoa.setCodigo((int) Table_contatos.getValueAt(Table_contatos.getSelectedRow(),0));
        pessoa.setNome(nome.getText());
        pessoa.setFone(telefone.getText());
        pessoa.setEmail(email.getText());//}

         // alteração do codigo++
         
       
         CRUD dados = new CRUD();
        
        dados.atualizar(pessoa);
        JOptionPane.showMessageDialog(null, " Contato atualizado com sucesso.");
       listarContatos();
        limpar();
    }

    private void listarContatos() throws SQLException, ClassNotFoundException {

        CRUD dados = new CRUD();
        // esta lista receberar os registros que atendem substring de pesquisa 

        String mostrar = "%" + campo_pesquisa.getText() + "%";

        
        listcontatos = dados.exibir(mostrar);
        MostrarPesquisa(listcontatos);

    }

    private void MostrarPesquisa(List<Contatos> c) {
        while (dtm.getRowCount() > 0) {
            dtm.removeRow(0);
        }
        //  se a listra estiver vazia , enviar msg ao usuario "nenhum contato"
        if (c.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Nenhum contato cadastro");
        } else {
            Object[] linha = new Object[]{null, null, null, null};

            // percorrer a lista de contatos e listar os registros
            for (int i = 0; i < c.size(); i++) {
                dtm.addRow(linha);
                dtm.setValueAt(c.get(i).getCodigo(), i, 0);
                dtm.setValueAt(c.get(i).getNome(), i, 1);
                dtm.setValueAt(c.get(i).getFone(), i, 2);
                dtm.setValueAt(c.get(i).getEmail(), i, 3);
            }
        }
    }

    private void removerContato(int codigo) throws SQLException, ClassNotFoundException {
        CRUD dados = new CRUD();
        dados.remover(codigo);
        String msg=" Contato removido com sucesso ";
        JOptionPane.showMessageDialog(null, msg,null, JOptionPane.INFORMATION_MESSAGE);
        listarContatos();
        limpar();
    }
}
